import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as l,c as n,b as e}from"./app-DQL8x_sY.js";const t={},i=e('<h1 id="线程" tabindex="-1"><a class="header-anchor" href="#线程" aria-hidden="true">#</a> 线程</h1><p>Java的线程是程序执行的最小单位，是操作系统进行调度的基本单元。Java中的线程由Thread类和Runnable接口实现。Thread类是一个实现了Runnable接口的类，它包含线程的控制方法和线程的生命周期方法。Runnable接口定义了一个run()方法，该方法包含线程要执行的代码。</p><p>Java中的线程有以下几种状态：</p><ol><li>初始(NEW)：新创建了一个线程对象，但还没有调用start()方法。</li><li>运行(RUNNABLE)：Java线程中将就绪（ready）和运行中（running）两种状态笼统的称为“运行”。<br> 线程对象创建后，其他线程(比如main线程）调用了该对象的start()方法。该状态的线程位于可运行线程池中，等待被线程调度选中，获取CPU的使用权，此时处于就绪状态（ready）。就绪状态的线程在获得CPU时间片后变为运行中状态（running）。</li><li>阻塞(BLOCKED)：表示线程阻塞于锁。</li><li>等待(WAITING)：进入该状态的线程需要等待其他线程做出一些特定动作（通知或中断）。</li><li>超时等待(TIMED_WAITING)：该状态不同于WAITING，它可以在指定的时间后自行返回。</li><li>终止(TERMINATED)：表示该线程已经执行完毕。</li></ol><img src="https://www.plantuml.com/plantuml/svg/ZPA_JiCm4CPtFuN75YcmCw0-11j2o6skYObphXn7KK1CB20oC362M62haDYenDEGje_HS_uZTMWMA_v-zztdioU95SQciM99994RdG1dxEBeadk-pj0xumWPF-NbylNlzwaiNfZxRpMJ8egf0WBEGmF2FwxiHcFMAPwHGMY9jJA6gqn82_u0Lm2BqVZ4xTDohINIiX0c8ezXXQTWRlztH6tbF2SynQQWRzhGKwLdKTKloN4M6eto1hYpPAtKvHiu1s2vasaIlMLpP5SiCI1gR-PMFZngusl1n195FPtru-VslIYNnVhXcGqKukXg60tPGkz_opXzRfvvsxTEkFbURLPlsw_xykUZPXh9KHNUNKGkGVcKwuwn2Q1F3s87" alt="uml diagram" loading="lazy">',5),r=[i];function o(s,c){return l(),n("div",null,r)}const d=a(t,[["render",o],["__file","线程.html.vue"]]);export{d as default};
