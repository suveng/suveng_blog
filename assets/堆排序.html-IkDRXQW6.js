const t=JSON.parse('{"key":"v-c5881fe4","path":"/zh/posts/%E7%AE%97%E6%B3%95/%E5%A0%86%E6%8E%92%E5%BA%8F.html","title":"堆排序","lang":"zh-CN","frontmatter":{"category":"算法","tag":["算法","排序"],"description":"堆排序（Heap Sort）是利用堆（Heap）这种数据结构进行选择排序的一种算法。堆是一个可以推导具有最大或最小值的树形结构，堆排序利用堆的特性进行排序。 堆排序分为两个步骤： 1. 建堆（Build Heap）：将一个无序的数组构建成一个大顶堆（Max Heap）。大顶堆的特点是父节点的值大于或等于其子节点的值。建堆的过程从数组的最后一个非叶子节点...","head":[["meta",{"property":"og:url","content":"https://suveng.site/zh/posts/%E7%AE%97%E6%B3%95/%E5%A0%86%E6%8E%92%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"苏文广的博客"}],["meta",{"property":"og:title","content":"堆排序"}],["meta",{"property":"og:description","content":"堆排序（Heap Sort）是利用堆（Heap）这种数据结构进行选择排序的一种算法。堆是一个可以推导具有最大或最小值的树形结构，堆排序利用堆的特性进行排序。 堆排序分为两个步骤： 1. 建堆（Build Heap）：将一个无序的数组构建成一个大顶堆（Max Heap）。大顶堆的特点是父节点的值大于或等于其子节点的值。建堆的过程从数组的最后一个非叶子节点..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-11T02:25:57.000Z"}],["meta",{"property":"article:author","content":"苏文广"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:tag","content":"排序"}],["meta",{"property":"article:modified_time","content":"2024-01-11T02:25:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"堆排序\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-11T02:25:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"苏文广\\",\\"url\\":\\"https://github.com/suveng\\"}]}"]]},"headers":[{"level":2,"title":"Java实现","slug":"java实现","link":"#java实现","children":[]}],"git":{"createdTime":1704939957000,"updatedTime":1704939957000,"contributors":[{"name":"suwenguang","email":"wenguang.su@ly.com","commits":1}]},"readingTime":{"minutes":2.19,"words":657},"filePathRelative":"zh/posts/算法/堆排序.md","localizedDate":"2024年1月11日","copyright":{"author":"苏文广","license":"CC BY-NC-ND 4.0"},"autoDesc":true}');export{t as data};
